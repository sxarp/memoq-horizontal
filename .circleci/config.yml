version: 2.1

references:
  - go_gcloud_image: &go_gcloud_image
      image: gcr.io/memoq-backend/go-gcloud:2.0 # docker_files/go_gcloud/Dockerfile
      auth:
        username: _json_key
        password: $GOOGLE_AUTH

  - datastore_image: &datastore_image
      image: gcr.io/memoq-backend/datastore-emulator:v1
      auth:
        username: _json_key
        password: $GOOGLE_AUTH

executors:
  default:
    docker:
      - *go_gcloud_image
    working_directory: /go/src/github.com/sxarp/memoq-horizontal
    environment:
      - PROJECT_NAME: memoq-backend
  for_tests:
    docker:
      - *go_gcloud_image
      - *datastore_image
    working_directory: /go/src/github.com/sxarp/memoq-horizontal

commands:
  restore_code:
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
  restore_dependencies:
    steps:
      - restore_cache:
          key: Gopkg-{ checksum "Gopkg.lock" }}
  deploy:
    description: "Apply chart to update pods with the builded image."
    parameters:
      name_space:
        type: string
        default: "development"
    steps:
      - run:
          name: setup helm and kubectl
          command: |
            gcloud container clusters get-credentials resources-v2-my-cluster --zone asia-northeast1-c
            namespace=<< parameters.name_space >>
            kubectl config set-context $(kubectl config current-context) --namespace=$namespace
            helm init --client-only
            helm repo update

jobs:
  checkout_code:
    executor: default
    steps:
      - checkout
      - run:
          name: lint
          command: "! go fmt ./... 2>&1 | read"
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ./

  build_dependencies:
    executor: default
    steps:
      - restore_code
      - restore_dependencies
      - run:
          name: dep
          command: |
            dep status
            dep ensure
      - save_cache:
          key: Gopkg-{ checksum "Gopkg.lock" }}
          paths:
            - "vendor"

  test:
    executor: for_tests
    steps:
      - restore_code
      - restore_dependencies

      - run: dev_tools/setup.sh
      - run:
          name: Run unit tests
          command: make test

  build_image:
    executor: default
    steps:
      - restore_code
      - restore_dependencies
      - run:
          name: setup gcloud
          command: |
            echo $GOOGLE_AUTH > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
            gcloud config set project $PROJECT_NAME
      - run:
          name: purge .gitignore
          command: rm .gitignore # To send vendor/ to cloudbuild.
      - run:
          name: build image
          command: |
            hash=$(git rev-parse HEAD)
            gcloud builds submit --config .circleci/cloudbuild.yml --substitutions=TAG_NAME=$hash .
  deploy_development:
    executor: default
    steps:
      - deploy:
          name_space: development

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - checkout_code
      - build_dependencies:
          requires:
            - checkout_code
      - test:
          requires:
            - build_dependencies
      - hold_build_image:
          type: approval
          requires:
            - test
      - build_image:
          requires:
            - hold_build_image
      - deploy_development:
          requires:
            - build_image
